// <auto-generated />
using System;
using CarParking.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarParking.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230417142255_InitDB_ParkingCar")]
    partial class InitDB_ParkingCar
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CarParking.Models.Account", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("CarParking.Models.BaiXe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AllSlot")
                        .HasColumnType("int");

                    b.Property<string>("NhanVien_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("RemainingSlot")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NhanVien_Id");

                    b.ToTable("BaiXe");
                });

            modelBuilder.Entity("CarParking.Models.KhachHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BaiXe_Id")
                        .HasColumnType("int");

                    b.Property<string>("MaXe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<DateTime>("timeIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("timeOut")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BaiXe_Id");

                    b.ToTable("KhachHang");
                });

            modelBuilder.Entity("CarParking.Models.NhanVien", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("dChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserName");

                    b.ToTable("NhanVien");
                });

            modelBuilder.Entity("CarParking.Models.BaiXe", b =>
                {
                    b.HasOne("CarParking.Models.NhanVien", "NhanVien")
                        .WithMany()
                        .HasForeignKey("NhanVien_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("CarParking.Models.KhachHang", b =>
                {
                    b.HasOne("CarParking.Models.BaiXe", "BaiXe")
                        .WithMany()
                        .HasForeignKey("BaiXe_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BaiXe");
                });

            modelBuilder.Entity("CarParking.Models.NhanVien", b =>
                {
                    b.HasOne("CarParking.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("UserName");

                    b.Navigation("Account");
                });
#pragma warning restore 612, 618
        }
    }
}
